plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'fr.communaywen'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://repo.purpurmc.org/snapshots"
    }
    maven {
        name = "reposiliteRepositoryReleases"
        url = "https://openmc-mvn.notri1.fr/release"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://maven.enginehub.org/repo/'
    }
    maven { url = "https://repo.onarandombox.com/content/groups/public/" }
}

dependencies {
    compileOnly "org.purpurmc.purpur:purpur-api:1.21-R0.1-SNAPSHOT"
    implementation 'dev.xernas:menulib:1.1.0'
    // Jetbrains annotations (@NotNull, @Nullable)
    implementation 'org.jetbrains:annotations:24.1.0'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.3-beta-14'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.github.dmulloy2:ProtocolLib:-SNAPSHOT'
    implementation 'org.json:json:20230618'
    implementation 'com.github.Revxrsal.Lamp:common:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.2.1'

    implementation 'org.reflections:reflections:0.9.12'

    implementation 'net.kyori:adventure-api:4.17.0'
    implementation 'net.kyori:adventure-platform-bukkit:4.3.3'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7+' // WorldEdit
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.10' // WorldGuard

    compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.+'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


jar {
    destinationDirectory.set(file("./builds/"))
}

shadowJar {
    destinationDirectory.set(file("./builds/"))
}

apply plugin: 'com.github.johnrengelman.shadow'
